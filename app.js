'use strict';

//Задание 1
/*пример 1
1. Объявили переменные, присвоили первым двум значения.
2. Префиксный инкремент увеличил значение а на 1.
3. Присвоили переменной с значение 2.
*/
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2
/*пример 2
1. присвоили переменной d значение переменной b, равное 1.
2. постфиксный инкремент увеличил значение переменной b на 1, получили b = 2.
*/
d = b++;
alert(d); //ответ: 1
/*пример 3
1. префиксный инкремент увеличил значение переменной a = 2 на 1, получили а = 3.
2. к 2 прибавили значение переменной а = 3, получили 5.
3. присвоили переменной с значение 5.
*/
c = 2 + ++a;
alert(c); //ответ: 5
/*пример 4
1. прибавили к 2 значение переменной b = 2 получили 4
2. Присвоили переменной d значение 4.
3. Постфиксный инкремент увеличил значение переменной b на 1, получили b = 3
*/
d = 2 + b++;
alert(d); //ответ: 4
alert(a); //3
alert(b); //3

//Задание 2
/*
1. Объявили переменную а и присвоили ей значение 2
2. Первым выполняется выражение в скобках, его можно представить как:
а = а * 2
подставляем значение переменной а = 2 * 2; получаем а = 4
3. переменная х = 1 + 4, получаем х = 5.
*/
let a = 2;
let x = 1 + (a *= 2);

//Задание 3
let a = 4;
let b = 8;
if (a >= 0 && b >= 0) {
    alert(a - b);
}
if (a < 0 && b < 0) {
    alert(a * b);
}
if ((a >= 0 && b < 0) || (a < 0 && b >= 0)) {
    alert(a + b);
}

//Задание 4
/**
 * Функция складывает два числа.
 */
function add(a, b) {
    return a + b;
}

/**
 * Функция вычитает два числа.
 */
function sub(a, b) {
    return a - b;
}

/**
 * Функция делит два числа.
 */
function div(a, b) {
    return a / b;
}

/**
 * Функция умножает два числа.
 */
function mult(a, b) {
    return a * b;
}

//Задание 5
/**
 * Функция принимает три параметра - два числа и название математической операции,
 * затем выполняет указанную операцию с числами.
 * @param {number} arg1 Первое число
 * @param {number} arg2 Второе число
 * @param {string} operation Математическая операция
 */
function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case "add":
            return arg1 + arg2;
        case "sub":
            return arg1 - arg2;
        case "div":
            return arg1 / arg2;
        case "mult":
            return arg1 * arg2;
    }
}